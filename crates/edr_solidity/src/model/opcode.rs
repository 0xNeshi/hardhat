#[derive(Debug, PartialEq, Eq, Clone, Copy)]
#[repr(u8)]
pub enum Opcode {
    // Arithmetic operations
    STOP = 0x00,
    ADD = 0x01,
    MUL = 0x02,
    SUB = 0x03,
    DIV = 0x04,
    SDIV = 0x05,
    MOD = 0x06,
    SMOD = 0x07,
    ADDMOD = 0x08,
    MULMOD = 0x09,
    EXP = 0x0a,
    SIGNEXTEND = 0x0b,

    // Unallocated
    Unrecognized0c = 0x0c,
    Unrecognized0d = 0x0d,
    Unrecognized0e = 0x0e,
    Unrecognized0f = 0x0f,

    // Comparison and bitwise operations
    LT = 0x10,
    GT = 0x11,
    SLT = 0x12,
    SGT = 0x13,
    EQ = 0x14,
    ISZERO = 0x15,
    AND = 0x16,
    OR = 0x17,
    XOR = 0x18,
    NOT = 0x19,
    BYTE = 0x1a,
    SHL = 0x1b,
    SHR = 0x1c,
    SAR = 0x1d,

    // Unallocated
    Unrecognized1e = 0x1e,
    Unrecognized1f = 0x1f,

    // Cryptographic operations
    SHA3 = 0x20,

    // Unallocated
    Unrecognized21 = 0x21,
    Unrecognized22 = 0x22,
    Unrecognized23 = 0x23,
    Unrecognized24 = 0x24,
    Unrecognized25 = 0x25,
    Unrecognized26 = 0x26,
    Unrecognized27 = 0x27,
    Unrecognized28 = 0x28,
    Unrecognized29 = 0x29,
    Unrecognized2a = 0x2a,
    Unrecognized2b = 0x2b,
    Unrecognized2c = 0x2c,
    Unrecognized2D = 0x2d,
    Unrecognized2E = 0x2e,
    Unrecognized2F = 0x2f,

    // Message info operations
    ADDRESS = 0x30,
    BALANCE = 0x31,
    ORIGIN = 0x32,
    CALLER = 0x33,
    CALLVALUE = 0x34,
    CALLDATALOAD = 0x35,
    CALLDATASIZE = 0x36,
    CALLDATACOPY = 0x37,
    CODESIZE = 0x38,
    CODECOPY = 0x39,
    GASPRICE = 0x3a,
    EXTCODESIZE = 0x3b,
    EXTCODECOPY = 0x3c,
    RETURNDATASIZE = 0x3d,
    RETURNDATACOPY = 0x3e,
    EXTCODEHASH = 0x3f,

    // Block info operations
    BLOCKHASH = 0x40,
    COINBASE = 0x41,
    TIMESTAMP = 0x42,
    NUMBER = 0x43,
    DIFFICULTY = 0x44,
    GASLIMIT = 0x45,

    // Istanbul opcodes
    CHAINID = 0x46,
    SELFBALANCE = 0x47,

    // London opcodes
    BASEFEE = 0x48,

    // Unallocated
    Unrecognized49 = 0x49,
    Unrecognized4A = 0x4a,
    Unrecognized4B = 0x4b,
    Unrecognized4C = 0x4c,
    Unrecognized4D = 0x4d,
    Unrecognized4E = 0x4e,
    Unrecognized4F = 0x4f,

    // Storage, memory, and other operations
    POP = 0x50,
    MLOAD = 0x51,
    MSTORE = 0x52,
    MSTORE8 = 0x53,
    SLOAD = 0x54,
    SSTORE = 0x55,
    JUMP = 0x56,
    JUMPI = 0x57,
    PC = 0x58,
    MSIZE = 0x59,
    GAS = 0x5a,
    JUMPDEST = 0x5b,

    // Uncallocated
    Unrecognized5C = 0x5c,
    Unrecognized5D = 0x5d,
    Unrecognized5E = 0x5e,
    Unrecognized5F = 0x5f,

    // Push operations
    PUSH1 = 0x60,
    PUSH2 = 0x61,
    PUSH3 = 0x62,
    PUSH4 = 0x63,
    PUSH5 = 0x64,
    PUSH6 = 0x65,
    PUSH7 = 0x66,
    PUSH8 = 0x67,
    PUSH9 = 0x68,
    PUSH10 = 0x69,
    PUSH11 = 0x6a,
    PUSH12 = 0x6b,
    PUSH13 = 0x6c,
    PUSH14 = 0x6d,
    PUSH15 = 0x6e,
    PUSH16 = 0x6f,
    PUSH17 = 0x70,
    PUSH18 = 0x71,
    PUSH19 = 0x72,
    PUSH20 = 0x73,
    PUSH21 = 0x74,
    PUSH22 = 0x75,
    PUSH23 = 0x76,
    PUSH24 = 0x77,
    PUSH25 = 0x78,
    PUSH26 = 0x79,
    PUSH27 = 0x7a,
    PUSH28 = 0x7b,
    PUSH29 = 0x7c,
    PUSH30 = 0x7d,
    PUSH31 = 0x7e,
    PUSH32 = 0x7f,

    // Dup operations
    DUP1 = 0x80,
    DUP2 = 0x81,
    DUP3 = 0x82,
    DUP4 = 0x83,
    DUP5 = 0x84,
    DUP6 = 0x85,
    DUP7 = 0x86,
    DUP8 = 0x87,
    DUP9 = 0x88,
    DUP10 = 0x89,
    DUP11 = 0x8a,
    DUP12 = 0x8b,
    DUP13 = 0x8c,
    DUP14 = 0x8d,
    DUP15 = 0x8e,
    DUP16 = 0x8f,

    // Swap operations
    SWAP1 = 0x90,
    SWAP2 = 0x91,
    SWAP3 = 0x92,
    SWAP4 = 0x93,
    SWAP5 = 0x94,
    SWAP6 = 0x95,
    SWAP7 = 0x96,
    SWAP8 = 0x97,
    SWAP9 = 0x98,
    SWAP10 = 0x99,
    SWAP11 = 0x9a,
    SWAP12 = 0x9b,
    SWAP13 = 0x9c,
    SWAP14 = 0x9d,
    SWAP15 = 0x9e,
    SWAP16 = 0x9f,

    // Log operations
    LOG0 = 0xa0,
    LOG1 = 0xa1,
    LOG2 = 0xa2,
    LOG3 = 0xa3,
    LOG4 = 0xa4,

    // Unallocated
    UnrecognizedA5 = 0xa5,
    UnrecognizedA6 = 0xa6,
    UnrecognizedA7 = 0xa7,
    UnrecognizedA8 = 0xa8,
    UnrecognizedA9 = 0xa9,
    UnrecognizedAA = 0xaa,
    UnrecognizedAB = 0xab,
    UnrecognizedAC = 0xac,
    UnrecognizedAD = 0xad,
    UnrecognizedAE = 0xae,
    UnrecognizedAF = 0xaf,

    UnrecognizedB0 = 0xb0,
    UnrecognizedB1 = 0xb1,
    UnrecognizedB2 = 0xb2,
    UnrecognizedB3 = 0xb3,
    UnrecognizedB4 = 0xb4,
    UnrecognizedB5 = 0xb5,
    UnrecognizedB6 = 0xb6,
    UnrecognizedB7 = 0xb7,
    UnrecognizedB8 = 0xb8,
    UnrecognizedB9 = 0xb9,
    UnrecognizedBA = 0xba,
    UnrecognizedBB = 0xbb,
    UnrecognizedBC = 0xbc,
    UnrecognizedBD = 0xbd,
    UnrecognizedBE = 0xbe,
    UnrecognizedBF = 0xbf,

    UnrecognizedC0 = 0xc0,
    UnrecognizedC1 = 0xc1,
    UnrecognizedC2 = 0xc2,
    UnrecognizedC3 = 0xc3,
    UnrecognizedC4 = 0xc4,
    UnrecognizedC5 = 0xc5,
    UnrecognizedC6 = 0xc6,
    UnrecognizedC7 = 0xc7,
    UnrecognizedC8 = 0xc8,
    UnrecognizedC9 = 0xc9,
    UnrecognizedCA = 0xca,
    UnrecognizedCB = 0xcb,
    UnrecognizedCC = 0xcc,
    UnrecognizedCD = 0xcd,
    UnrecognizedCE = 0xce,
    UnrecognizedCF = 0xcf,

    UnrecognizedD0 = 0xd0,
    UnrecognizedD1 = 0xd1,
    UnrecognizedD2 = 0xd2,
    UnrecognizedD3 = 0xd3,
    UnrecognizedD4 = 0xd4,
    UnrecognizedD5 = 0xd5,
    UnrecognizedD6 = 0xd6,
    UnrecognizedD7 = 0xd7,
    UnrecognizedD8 = 0xd8,
    UnrecognizedD9 = 0xd9,
    UnrecognizedDA = 0xda,
    UnrecognizedDB = 0xdb,
    UnrecognizedDC = 0xdc,
    UnrecognizedDD = 0xdd,
    UnrecognizedDE = 0xde,
    UnrecognizedDF = 0xdf,

    UnrecognizedE0 = 0xe0,
    UnrecognizedE1 = 0xe1,
    UnrecognizedE2 = 0xe2,
    UnrecognizedE3 = 0xe3,
    UnrecognizedE4 = 0xe4,
    UnrecognizedE5 = 0xe5,
    UnrecognizedE6 = 0xe6,
    UnrecognizedE7 = 0xe7,
    UnrecognizedE8 = 0xe8,
    UnrecognizedE9 = 0xe9,
    UnrecognizedEA = 0xea,
    UnrecognizedEB = 0xeb,
    UnrecognizedEC = 0xec,
    UnrecognizedED = 0xed,
    UnrecognizedEE = 0xee,
    UnrecognizedEF = 0xef,

    // Call operations
    CREATE = 0xf0,
    CALL = 0xf1,
    CALLCODE = 0xf2,
    RETURN = 0xf3,
    DELEGATECALL = 0xf4,
    CREATE2 = 0xf5,

    // Unallocated
    UnrecognizedF6 = 0xf6,
    UnrecognizedF7 = 0xf7,
    UnrecognizedF8 = 0xf8,
    UnrecognizedF9 = 0xf9,

    // Other operations
    STATICCALL = 0xfa,

    // Unallocated
    UnrecognizedFb = 0xfb,
    UnrecognizedFc = 0xfc,

    // Other operations
    REVERT = 0xfd,
    INVALID = 0xfe,
    SELFDESTRUCT = 0xff,
}

impl Opcode {
    fn len(&self) -> usize {
        match self {
            Opcode::PUSH1 => 2,
            Opcode::PUSH2 => 3,
            Opcode::PUSH3 => 4,
            Opcode::PUSH4 => 5,
            Opcode::PUSH5 => 6,
            Opcode::PUSH6 => 7,
            Opcode::PUSH7 => 8,
            Opcode::PUSH8 => 9,
            Opcode::PUSH9 => 10,
            Opcode::PUSH10 => 11,
            Opcode::PUSH11 => 12,
            Opcode::PUSH12 => 13,
            Opcode::PUSH13 => 14,
            Opcode::PUSH14 => 15,
            Opcode::PUSH15 => 16,
            Opcode::PUSH16 => 17,
            Opcode::PUSH17 => 18,
            Opcode::PUSH18 => 19,
            Opcode::PUSH19 => 20,
            Opcode::PUSH20 => 21,
            Opcode::PUSH21 => 22,
            Opcode::PUSH22 => 23,
            Opcode::PUSH23 => 24,
            Opcode::PUSH24 => 25,
            Opcode::PUSH25 => 26,
            Opcode::PUSH26 => 27,
            Opcode::PUSH27 => 28,
            Opcode::PUSH28 => 29,
            Opcode::PUSH29 => 30,
            Opcode::PUSH30 => 31,
            Opcode::PUSH31 => 32,
            Opcode::PUSH32 => 33,
            _ => 1,
        }
    }
}

pub fn decode_opcode(bytecode: &Vec<u8>, program_counter: usize) -> Opcode {
    let raw_opcode = bytecode[program_counter];

    // SAFETY: There's an Opcode varian for every possible u8 value, so this is
    // safe.
    unsafe { ::std::mem::transmute(raw_opcode) }
}
